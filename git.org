#+TITLE:   git
#+OPTIONS: toc:nil num:nil html-postamble:nil
#+STARTUP: showall

* Where to start
  - [[https://git-scm.com/][git home page]]
  - [[https://git-scm.com/book/en/v2][Pro Git]] book
  - [[https://try.github.io/][Try Git]]
  - [[https://github.com/pluralsight/git-internals-pdf][Git Internals]] book
  - [[https://githowto.com/][GitHowTo: Guided Git Tutorial]]
* Setting a GitHub repository
  - [[https://help.github.com/][GitHub Help]]
* Create a new repository and export to GitHub
  #+BEGIN_SRC
  $ echo "#+TITLE: sandbox" > README.org
  $ git init
  $ git config user.name "energos"
  $ git config user.email "energos@users.noreply.github.com"
  $ git remote add origin git@github.com:energos/sandbox.git
  $ git add README.org
  $ git commit -m "Initial commit"
  $ git push -u origin master
  #+END_SRC
* Working Tree / Staging Area / Repository
  #+BEGIN_SRC
  Working       Staging      .git Local     Remote
  Tree          Area         Repository     Repository
    |             |              |             |
    |--- Stage -->|--- Commit -->|--- Push --->|
    |                            |             |
    |<-------- Checkout ---------|       ? <---|
  #+END_SRC
* Command line help
  #+BEGIN_SRC
  $ git help
  $ git --help
  $ git help <verb>
  $ git <verb> --help
  $ man git
  $ man git-<verb>
  #+END_SRC
* Add
  - *git stage* is a synonym for *git add*
  #+BEGIN_SRC
  $ git add <file>
  $ git add -A
  #+END_SRC
** Undo an Add (Unstage)
   #+BEGIN_SRC
   $ git reset HEAD <file>
   #+END_SRC
* Discard changes to a file
** Unstaged changes
  #+BEGIN_SRC
  $ git checkout -- <file>
  #+END_SRC
** Staged changes
   First, unstage the changes
   #+BEGIN_SRC
   $ git reset HEAD <file>
   #+END_SRC
   then, discard the changes
   #+BEGIN_SRC
   $ git checkout -- <file>
   #+END_SRC
* Diff
  - *git diff* shows unstaged changes
  - *git diff --staged* shows staged changes
  - *--staged* is a synonym of *--cached*
* Log
  #+BEGIN_SRC
  $ git log
  $ git log --stat
  $ git log -p
  $ git log -1
  $ git log --pretty=oneline
  $ git log --pretty=format:"%h: %s - %ar" --graph
  $ git log --oneline
  $ git log --oneline --since=6.hours
  $ git log --oneline -i --grep remove
  $ git log --oneline -i -Shello
  $ git log --oneline -- foo.txt
  #+END_SRC
* Unsorted notes
  - [[https://github.com/github/gitignore][GitHub - A collection of useful .gitignore templates]]
